# ===============================
# 🚀 Clash配置文件（详细教学注释版）
# 版本：优化整理版
# ===============================

# ✨ 节点订阅（proxy-providers）
proxy-providers:
  Longmao:
    # 订阅链接（机场提供的订阅地址）
    url: ""
    type: http          # 使用HTTP方式拉取
    interval: 86400     # 每86400秒（一天）自动更新
    health-check:       # 节点健康检查（检测可用性）
      enable: true
      url: https://www.gstatic.com/generate_204
      interval: 21600    # 每360分钟测速一次
    proxy: 直连          # 拉取订阅时走直连，不经过代理

# ✨ 本地自定义节点（proxies）
proxies:
  - name: 直连
    type: direct        # 直连，不经过任何代理服务器

# ✨ 端口设置（本地监听端口）
port: 7890               # HTTP代理端口
socks-port: 7891         # SOCKS5代理端口
redir-port: 7892         # Redir透明代理端口
mixed-port: 7893         # Mixed端口（支持HTTP/SOCKS5）
tproxy-port: 7894        # TProxy透明代理端口（更强的透明代理）

# ✨ 局域网相关
allow-lan: true          # 允许局域网设备访问代理
bind-address: "*"        # 监听所有IP（"*"表示0.0.0.0）

# ✨ 网络栈优化
ipv6: false              # 禁用IPv6（除非明确需要，不建议开启）
unified-delay: true      # 启用统一延迟，提高连接体验
tcp-concurrent: true     # TCP并发连接（更快建立连接）
find-process-mode: 'off' # 禁用进程查找（省资源）

# ✨ 指纹伪装（反检测）
global-client-fingerprint: chrome  # 伪装成Chrome浏览器

# ✨ 保活设置（长连接优化）
keep-alive-idle: 600               # 连接空闲保持时间（秒）
keep-alive-interval: 15             # 保活探测包间隔（秒）
disable-keep-alive: false           # 启用keep-alive

# ✨ 配置存储选项
profile:
  store-selected: true    # 记住上次选择的节点
  store-fake-ip: true      # 记住fake-ip分配结果

# ✨ 控制面板设置
external-controller: 0.0.0.0:9090   # 控制面板监听地址与端口
secret: ""                          # 控制面板密码（为空表示不设置）
external-ui: "/etc/mihomo/run/ui"    # 本地UI路径
external-ui-name: zashboard         # UI名称（这里是Zashboard）
external-ui-url: "https://github.com/Zephyruso/zashboard/archive/refs/heads/gh-pages.zip"
# 如果本地没有UI，会自动从这个地址下载面板

# ✨ 嗅探器（sniffer）功能
sniffer:
  enable: true             # 开启嗅探（抓取流量中的域名信息）
  sniff:
    HTTP:
      ports: [80, 8080-8880]         # 指定嗅探HTTP端口
      override-destination: true    # 覆盖目标地址
    TLS:
      ports: [443, 8443]             # 指定嗅探HTTPS端口
    QUIC:
      ports: [443, 8443]             # 指定嗅探QUIC端口
  force-domain:
    - "+.v2ex.com"         # 强制嗅探的域名
  skip-domain:
    - "+.baidu.com"        # 跳过嗅探的域名（提升性能）

# ✨ 入站配置（tun模块，强制流量劫持）
tun:
  enable: true              # 开启Tun模式
  stack: mixed              # 使用混合模式（system+gvisor结合）
  dns-hijack: ["any:53", "tcp://any:53"]  # 劫持DNS查询请求
  auto-route: true          # 自动添加路由规则
  auto-redirect: true       # 自动重定向流量
  auto-detect-interface: true  # 自动探测网卡

# ✨ DNS模块（重要！直接影响流量分流）
dns:
  enable: true
  listen: 0.0.0.0:1053     # DNS服务监听地址和端口
  ipv6: false              # 关闭IPv6查询
  respect-rules: true      # 按照Clash规则处理DNS请求
  enhanced-mode: fake-ip   # 启用Fake-IP模式（适合解锁流媒体）
  fake-ip-range: 28.0.0.1/8
  fake-ip-filter-mode: blacklist
  fake-ip-filter:
    - "rule-set:private_domain,cn_domain" # 国区域名直连
    - "+.msftconnecttest.com"             # 微软连通性测试
    - "+.msftncsi.com"
    - "time.*.com"
  default-nameserver:
    - 223.5.5.5         # 默认DNS（阿里公共DNS）
  proxy-server-nameserver:
    - https://223.5.5.5/dns-query  # 用于代理服务器内部DNS
  nameserver:
    - 61.128.128.68     # 本地运营商DNS（推荐）
    - 61.128.192.68
    
# 出站策略
# 注意：锚点必须放在引用之前
pr: &pr
  type: select
  proxies:
    - 🚀 默认代理
    - ♻️ 自动选择
    - 🇭🇰 香港节点
    - 🇹🇼 台湾节点
    - 🇸🇬 新加坡节点
    - 🇯🇵 日本节点
    - 🇺🇲 美国节点
    - 🇲🇾 马来西亚节点
    - 🌐 全部节点
    - 直连

proxy-groups:
  - name: 🚀 默认代理
    type: select
    proxies:
      - ♻️ 自动选择
      - 🇭🇰 香港节点
      - 🇹🇼 台湾节点
      - 🇸🇬 新加坡节点
      - 🇯🇵 日本节点
      - 🇺🇲 美国节点
      - 🇲🇾 马来西亚节点
      - 🌐 全部节点
      - 直连

  - name: 📹 YouTube
    <<: *pr

  - name: 🍀 Google
    <<: *pr

  - name: 📷 Instagram
    <<: *pr

  - name: 📘 Facebook
    <<: *pr

  - name: 🐦 Twitter
    <<: *pr

  - name: 🤖 ChatGPT
    <<: *pr

  - name: 👨🏿‍💻 GitHub
    <<: *pr

  - name: 🐬 OneDrive
    <<: *pr

  - name: 🪟 Microsoft
    <<: *pr

  - name: 🎵 TikTok
    <<: *pr

  - name: 📲 Telegram
    <<: *pr

  - name: 🎥 NETFLIX
    <<: *pr

  - name: ✈️ Speedtest
    <<: *pr

  - name: 💶 PayPal
    <<: *pr

  - name: 🍎 Apple
    type: select
    proxies:
      - 直连
      - 🚀 默认代理

  - name: 🎯 直连
    type: select
    proxies:
      - 直连
      - 🚀 默认代理

  - name: 🐟 漏网之鱼
    <<: *pr

  # 区域节点筛选
  - name: 🇭🇰 香港节点
    type: select
    include-all: true
    filter: "(?i)港|hk|hongkong|hong kong"

  - name: 🇹🇼 台湾节点
    type: select
    include-all: true
    filter: "(?i)台|tw"

  - name: 🇸🇬 新加坡节点
    type: select
    include-all: true
    filter: "(?i)坡|sg"

  - name: 🇯🇵 日本节点
    type: select
    include-all: true
    filter: "(?i)日|jp|japan"

  - name: 🇺🇲 美国节点
    type: select
    include-all: true
    filter: "(?i)美|us|unitedstates|united states"

  - name: 🇲🇾 马来西亚节点
    type: select
    include-all: true
    filter: "(?i)马|my"

  # 自动测速选择节点
  - name: ♻️ 自动选择
    type: url-test
    include-all: true
    tolerance: 20
    interval: 300
    filter: "^((?!(直连)).)*$"

  - name: 🌐 全部节点
    type: select
    include-all: true

# 规则匹配
rules:
  - RULE-SET,private_domain,直连
  - RULE-SET,apple_domain,🍎 Apple
  - RULE-SET,proxylite,🚀 默认代理
  - RULE-SET,ai,🤖 ChatGPT
  - RULE-SET,github_domain,👨🏿‍💻 GitHub
  - RULE-SET,youtube_domain,📹 YouTube
  - RULE-SET,google_domain,🍀 Google
  - RULE-SET,instagram_domain,📷 Instagram
  - RULE-SET,facebook_domain,📘 Facebook
  - RULE-SET,twitter_domain,🐦 Twitter
  - RULE-SET,onedrive_domain,🐬 OneDrive
  - RULE-SET,microsoft_domain,🪟 Microsoft
  - RULE-SET,tiktok_domain,🎵 TikTok
  - RULE-SET,speedtest_domain,✈️ Speedtest
  - RULE-SET,telegram_domain,📲 Telegram
  - RULE-SET,netflix_domain,🎥 NETFLIX
  - RULE-SET,paypal_domain,💶 PayPal
  - RULE-SET,gfw_domain,🚀 默认代理
  - RULE-SET,geolocation-!cn,🚀 默认代理
  - RULE-SET,cn_domain,🎯 直连
  - RULE-SET,google_ip,🍀 Google,no-resolve
  - RULE-SET,netflix_ip,🎥 NETFLIX,no-resolve
  - RULE-SET,telegram_ip,📲 Telegram,no-resolve
  - RULE-SET,cn_ip,🎯 直连
  - MATCH,🐟 漏网之鱼
    
# 规则锚点定义
rule-anchor:
  ip: &ip
    type: http
    interval: 86400
    behavior: ipcidr
    format: mrs

  domain: &domain
    type: http
    interval: 86400
    behavior: domain
    format: mrs

  class: &class
    type: http
    interval: 86400
    behavior: classical
    format: text

# 规则提供者 rule-providers
rule-providers:
  private_domain:
    <<: *domain
    url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/private.mrs"

  proxylite:
    <<: *class
    url: "https://raw.githubusercontent.com/alix-crypto/myroom/refs/heads/main/proxy.list"

  ai:
    <<: *domain
    url: "https://github.com/MetaCubeX/meta-rules-dat/raw/refs/heads/meta/geo/geosite/category-ai-!cn.mrs"

  youtube_domain:
    <<: *domain
    url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/youtube.mrs"

  google_domain:
    <<: *domain
    url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/google.mrs"

  instagram_domain:
    <<: *domain
    url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/instagram.mrs"

  facebook_domain:
    <<: *domain
    url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/facebook.mrs"

  twitter_domain:
    <<: *domain
    url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/twitter.mrs"

  github_domain:
    <<: *domain
    url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/github.mrs"

  telegram_domain:
    <<: *domain
    url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/telegram.mrs"

  netflix_domain:
    <<: *domain
    url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/netflix.mrs"

  paypal_domain:
    <<: *domain
    url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/paypal.mrs"

  onedrive_domain:
    <<: *domain
    url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/onedrive.mrs"

  microsoft_domain:
    <<: *domain
    url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/microsoft.mrs"

  apple_domain:
    <<: *domain
    url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/apple@cn.mrs"

  speedtest_domain:
    <<: *domain
    url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/ookla-speedtest.mrs"

  tiktok_domain:
    <<: *domain
    url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/tiktok.mrs"

  gfw_domain:
    <<: *domain
    url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/gfw.mrs"

  geolocation-!cn:
    <<: *domain
    url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/geolocation-!cn.mrs"

  cn_domain:
    <<: *domain
    url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/cn.mrs"

  cn_ip:
    <<: *ip
    url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/cn.mrs"

  google_ip:
    <<: *ip
    url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/google.mrs"

  telegram_ip:
    <<: *ip
    url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/telegram.mrs"

  netflix_ip:
    <<: *ip
    url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/netflix.mrs"
    
